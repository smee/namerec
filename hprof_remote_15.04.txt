JAVA PROFILE 1.0.1, created Fri Apr 15 09:24:20 2005

Header for -Xhprof ASCII Output

Copyright 1998 Sun Microsystems, Inc. 901 San Antonio Road, Palo Alto,
California, 94303, U.S.A.  All Rights Reserved.

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME	is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
		the time spent by a thread waiting to enter a monitor.
		Entries in this record are TRACEs ranked by the percentage
		of total monitor contention time and a brief description
		of the monitor.  The "count" field indicates the number of 
		times the monitor was contended at that TRACE.

MONITOR DUMP	is a complete snapshot of all the monitors and threads in 
		the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=8118840, id = 1, name="Finalizer", group="system")
THREAD START (obj=8118930, id = 2, name="Reference Handler", group="system")
THREAD START (obj=81189f8, id = 3, name="main", group="main")
THREAD START (obj=811a0a8, id = 4, name="HPROF CPU profiler", group="system")
THREAD START (obj=811d4b0, id = 5, name="Signal Dispatcher", group="system")
THREAD START (obj=8070330, id = 6, name="SIGTERM handler", group="system")
THREAD END (id = 6)
TRACE 5:
	<empty>
TRACE 82:
	java.util.regex.Matcher.reset(<Unknown>:Unknown line)
	java.util.regex.Matcher.matches(<Unknown>:Unknown line)
	TextProcessor.getCandidatesOfText(TextProcessor.java:92)
	Recognizer.main(Recognizer.java:273)
TRACE 141:
	java.util.regex.Pattern$BitClass.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Matcher.match(<Unknown>:Unknown line)
TRACE 166:
	java.lang.StringBuffer.toString(<Unknown>:Unknown line)
	Annotate.tokenize(Annotate.java:52)
	Recognizer.checkCandidates(Recognizer.java:191)
	Recognizer.main(Recognizer.java:276)
TRACE 96:
	java.lang.Character.digit(<Unknown>:Unknown line)
	java.lang.Integer.parseInt(<Unknown>:Unknown line)
	java.lang.Integer.<init>(<Unknown>:Unknown line)
	TextProcessor.getNEsOfText(TextProcessor.java:152)
TRACE 131:
	java.lang.Integer.<init>(<Unknown>:Unknown line)
	Rules.candidates(Rules.java:135)
	TextProcessor.getCandidatesOfText(TextProcessor.java:115)
	Recognizer.main(Recognizer.java:273)
TRACE 78:
	TextProcessor.getNEsOfText(TextProcessor.java:143)
	Recognizer.main(Recognizer.java:280)
TRACE 58:
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Curly.match0(<Unknown>:Unknown line)
	java.util.regex.Pattern$Curly.match(<Unknown>:Unknown line)
TRACE 55:
	java.lang.StringBuffer.<init>(<Unknown>:Unknown line)
	java.lang.StringBuffer.<init>(<Unknown>:Unknown line)
	TextProcessor.tokenize(TextProcessor.java:38)
	TextProcessor.getNEsOfText(TextProcessor.java:134)
TRACE 63:
	TextProcessor.tokenize(TextProcessor.java:38)
	TextProcessor.getNEsOfText(TextProcessor.java:134)
	Recognizer.main(Recognizer.java:280)
TRACE 155:
	sun.nio.cs.ISO_8859_15.newEncoder(<Unknown>:Unknown line)
	sun.nio.cs.StreamEncoder$CharsetSE.<init>(<Unknown>:Unknown line)
	sun.nio.cs.StreamEncoder$CharsetSE.<init>(<Unknown>:Unknown line)
	sun.nio.cs.StreamEncoder.forOutputStreamWriter(<Unknown>:Unknown line)
TRACE 65:
	java.util.regex.Pattern$BitClass.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Curly.match(<Unknown>:Unknown line)
TRACE 57:
	java.util.regex.Pattern$GroupHead.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Loop.matchInit(<Unknown>:Unknown line)
	java.util.regex.Pattern$Prolog.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Curly.match0(<Unknown>:Unknown line)
TRACE 53:
	RulesNE.match(RulesNE.java:191)
	TextProcessor.getNEsOfText(TextProcessor.java:169)
	Recognizer.main(Recognizer.java:280)
TRACE 144:
	java.util.Hashtable.getEnumeration(<Unknown>:Unknown line)
	java.util.Hashtable.keys(<Unknown>:Unknown line)
	TextProcessor.getNEsOfText(TextProcessor.java:143)
	Recognizer.main(Recognizer.java:280)
TRACE 43:
	java.util.regex.Pattern.matcher(<Unknown>:Unknown line)
	TextProcessor.getNEsOfText(TextProcessor.java:147)
	Recognizer.main(Recognizer.java:280)
TRACE 56:
	java.util.Hashtable$Enumerator.<init>(<Unknown>:Unknown line)
	java.util.Hashtable.getEnumeration(<Unknown>:Unknown line)
	java.util.Hashtable.keys(<Unknown>:Unknown line)
	TextProcessor.getNEsOfText(TextProcessor.java:143)
TRACE 117:
	sun.nio.cs.SingleByteEncoder.encodeArrayLoop(<Unknown>:Unknown line)
	sun.nio.cs.SingleByteEncoder.encodeLoop(<Unknown>:Unknown line)
	java.nio.charset.CharsetEncoder.encode(<Unknown>:Unknown line)
	sun.nio.cs.StreamEncoder$CharsetSE.implWrite(<Unknown>:Unknown line)
TRACE 76:
	java.util.regex.Matcher.reset(<Unknown>:Unknown line)
	java.util.regex.Matcher.<init>(<Unknown>:Unknown line)
	java.util.regex.Pattern.matcher(<Unknown>:Unknown line)
	TextProcessor.getNEsOfText(TextProcessor.java:147)
TRACE 10:
	Recognizer.<clinit>(Recognizer.java:149)
TRACE 140:
	java.nio.charset.CharsetDecoder.flush(<Unknown>:Unknown line)
	java.lang.StringCoding$CharsetSD.decode(<Unknown>:Unknown line)
	java.lang.StringCoding.decode(<Unknown>:Unknown line)
	java.lang.StringCoding.decode(<Unknown>:Unknown line)
TRACE 126:
	java.util.Hashtable.toString(<Unknown>:Unknown line)
	TextProcessor.getCandidatesOfText(TextProcessor.java:120)
	Recognizer.main(Recognizer.java:273)
TRACE 157:
	java.io.File.<init>(<Unknown>:Unknown line)
	java.io.FileOutputStream.<init>(<Unknown>:Unknown line)
	java.io.FileWriter.<init>(<Unknown>:Unknown line)
	RulesNE.output(RulesNE.java:155)
TRACE 1:
	java.lang.ClassLoader.findBootstrapClass(<Unknown>:Native method)
	java.lang.ClassLoader.findBootstrapClass0(<Unknown>:Unknown line)
	java.lang.ClassLoader.loadClass(<Unknown>:Unknown line)
	java.lang.ClassLoader.loadClass(<Unknown>:Unknown line)
TRACE 74:
	TextProcessor.getCandidatesOfText(TextProcessor.java:92)
	Recognizer.main(Recognizer.java:273)
TRACE 21:
	java.net.Inet4Address.init(<Unknown>:Native method)
	java.net.Inet4Address.<clinit>(<Unknown>:Unknown line)
	java.net.Inet4AddressImpl.anyLocalAddress(<Unknown>:Unknown line)
	java.net.InetAddress.cacheInitIfNeeded(<Unknown>:Unknown line)
TRACE 92:
	java.lang.Character.toUpperCaseEx(<Unknown>:Unknown line)
	java.lang.String.toUpperCase(<Unknown>:Unknown line)
	java.lang.String.toUpperCase(<Unknown>:Unknown line)
	org.gjt.mm.mysql.ResultSet.buildIndexMapping(<Unknown>:Unknown line)
TRACE 3:
	sun.misc.URLClassPath$JarLoader.getJarFile(<Unknown>:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(<Unknown>:Unknown line)
	sun.misc.URLClassPath$3.run(<Unknown>:Unknown line)
	java.security.AccessController.doPrivileged(<Unknown>:Native method)
TRACE 60:
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Matcher.match(<Unknown>:Unknown line)
	java.util.regex.Matcher.matches(<Unknown>:Unknown line)
	TextProcessor.getCandidatesOfText(TextProcessor.java:92)
TRACE 50:
	RulesNE.match(RulesNE.java:189)
	TextProcessor.getNEsOfText(TextProcessor.java:169)
	Recognizer.main(Recognizer.java:280)
TRACE 30:
	java.lang.StringBuffer.toString(<Unknown>:Unknown line)
	Rules.loadPatterns(Rules.java:50)
	Recognizer.main(Recognizer.java:255)
TRACE 81:
	java.io.FileOutputStream.openAppend(<Unknown>:Native method)
	java.io.FileOutputStream.<init>(<Unknown>:Unknown line)
	java.io.FileOutputStream.<init>(<Unknown>:Unknown line)
	java.io.FileWriter.<init>(<Unknown>:Unknown line)
TRACE 28:
	org.gjt.mm.mysql.Field.<init>(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.getResultSet(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.sqlQueryDirect(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.sqlQuery(<Unknown>:Unknown line)
TRACE 170:
	java.lang.String.<init>(<Unknown>:Unknown line)
	java.lang.StringBuffer.toString(<Unknown>:Unknown line)
	Annotate.tokenize(Annotate.java:36)
	Recognizer.checkCandidates(Recognizer.java:191)
TRACE 52:
	java.util.regex.Matcher.match(<Unknown>:Unknown line)
	java.util.regex.Matcher.matches(<Unknown>:Unknown line)
	TextProcessor.getNEsOfText(TextProcessor.java:147)
	Recognizer.main(Recognizer.java:280)
TRACE 51:
	java.io.BufferedOutputStream.flush(<Unknown>:Unknown line)
	java.io.PrintStream.write(<Unknown>:Unknown line)
	sun.nio.cs.StreamEncoder$CharsetSE.writeBytes(<Unknown>:Unknown line)
	sun.nio.cs.StreamEncoder$CharsetSE.implFlushBuffer(<Unknown>:Unknown line)
TRACE 101:
	sun.io.Converters.getDefaultEncodingName(<Unknown>:Unknown line)
	java.lang.StringCoding.decode(<Unknown>:Unknown line)
	java.lang.String.<init>(<Unknown>:Unknown line)
	java.lang.String.<init>(<Unknown>:Unknown line)
TRACE 80:
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Curly.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$GroupHead.match(<Unknown>:Unknown line)
TRACE 158:
	org.gjt.mm.mysql.MysqlIO.clearAllReceive(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.sqlQueryDirect(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.sqlQuery(<Unknown>:Unknown line)
	org.gjt.mm.mysql.Connection.execSQL(<Unknown>:Unknown line)
TRACE 29:
	org.gjt.mm.mysql.jdbc2.IO.buildResultSetWithRows(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.getResultSet(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.sqlQueryDirect(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.sqlQuery(<Unknown>:Unknown line)
TRACE 134:
	java.lang.StringBuffer.<init>(<Unknown>:Unknown line)
	java.lang.StringBuffer.<init>(<Unknown>:Unknown line)
	java.util.Hashtable.toString(<Unknown>:Unknown line)
	Recognizer.main(Recognizer.java:275)
TRACE 116:
	java.util.regex.Pattern$Loop.matchInit(<Unknown>:Unknown line)
	java.util.regex.Pattern$Prolog.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Curly.match0(<Unknown>:Unknown line)
	java.util.regex.Pattern$Curly.match(<Unknown>:Unknown line)
TRACE 136:
	java.lang.StringBuffer.append(<Unknown>:Unknown line)
	java.lang.StringBuffer.<init>(<Unknown>:Unknown line)
	Annotate.tokenize(Annotate.java:36)
	Recognizer.checkCandidates(Recognizer.java:191)
TRACE 161:
	java.util.regex.Matcher.reset(<Unknown>:Unknown line)
	java.util.regex.Matcher.<init>(<Unknown>:Unknown line)
	java.util.regex.Pattern.matcher(<Unknown>:Unknown line)
	TextProcessor.getCandidatesOfText(TextProcessor.java:92)
TRACE 127:
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Curly.match0(<Unknown>:Unknown line)
	java.util.regex.Pattern$Curly.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$GroupHead.match(<Unknown>:Unknown line)
TRACE 83:
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Matcher.match(<Unknown>:Unknown line)
TRACE 38:
	RulesNE.match(RulesNE.java:193)
	TextProcessor.getNEsOfText(TextProcessor.java:169)
	Recognizer.main(Recognizer.java:280)
TRACE 47:
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Curly.match0(<Unknown>:Unknown line)
	java.util.regex.Pattern$Curly.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
TRACE 106:
	java.lang.StringBuffer.expandCapacity(<Unknown>:Unknown line)
	java.lang.StringBuffer.append(<Unknown>:Unknown line)
	DBaccess.getNof(DBaccess.java:112)
	DBaccess.getNof(DBaccess.java:72)
TRACE 70:
	java.util.regex.Pattern.matcher(<Unknown>:Unknown line)
	Annotate.annotate(Annotate.java:92)
	Recognizer.checkCandidates(Recognizer.java:192)
	Recognizer.main(Recognizer.java:276)
TRACE 112:
	java.io.PrintStream.write(<Unknown>:Unknown line)
	java.io.PrintStream.print(<Unknown>:Unknown line)
	java.io.PrintStream.println(<Unknown>:Unknown line)
	TextProcessor.getNEsOfText(TextProcessor.java:174)
TRACE 79:
	sun.nio.cs.StreamEncoder$CharsetSE.writeBytes(<Unknown>:Unknown line)
	sun.nio.cs.StreamEncoder$CharsetSE.implFlushBuffer(<Unknown>:Unknown line)
	sun.nio.cs.StreamEncoder.flushBuffer(<Unknown>:Unknown line)
	java.io.OutputStreamWriter.flushBuffer(<Unknown>:Unknown line)
TRACE 75:
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Curly.match0(<Unknown>:Unknown line)
TRACE 2:
	sun.misc.URLClassPath$3.run(<Unknown>:Unknown line)
	java.security.AccessController.doPrivileged(<Unknown>:Native method)
	sun.misc.URLClassPath.getLoader(<Unknown>:Unknown line)
	sun.misc.URLClassPath.getLoader(<Unknown>:Unknown line)
TRACE 156:
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Curly.match(<Unknown>:Unknown line)
TRACE 163:
	java.util.Vector.elements(<Unknown>:Unknown line)
	MatcherNam.getClassificationsOf(MatcherNam.java:490)
	Recognizer.checkCandidates(Recognizer.java:193)
	Recognizer.main(Recognizer.java:276)
TRACE 149:
	java.util.Hashtable.get(<Unknown>:Unknown line)
	Rules.candidates(Rules.java:135)
	TextProcessor.getCandidatesOfText(TextProcessor.java:115)
	Recognizer.main(Recognizer.java:273)
TRACE 67:
	java.nio.CharBuffer.wrap(<Unknown>:Unknown line)
	sun.nio.cs.StreamEncoder$CharsetSE.implWrite(<Unknown>:Unknown line)
	sun.nio.cs.StreamEncoder.write(<Unknown>:Unknown line)
	sun.nio.cs.StreamEncoder.write(<Unknown>:Unknown line)
TRACE 27:
	org.gjt.mm.mysql.MysqlIO.getResultSet(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.sqlQueryDirect(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.sqlQuery(<Unknown>:Unknown line)
	org.gjt.mm.mysql.Connection.execSQL(<Unknown>:Unknown line)
TRACE 135:
	org.gjt.mm.mysql.ResultSet.<init>(<Unknown>:Unknown line)
	org.gjt.mm.mysql.jdbc2.ResultSet.<init>(<Unknown>:Unknown line)
	org.gjt.mm.mysql.jdbc2.IO.buildResultSetWithRows(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.getResultSet(<Unknown>:Unknown line)
TRACE 114:
	Rules.candidates(Rules.java:129)
	TextProcessor.getCandidatesOfText(TextProcessor.java:115)
	Recognizer.main(Recognizer.java:273)
TRACE 162:
	java.util.regex.Matcher.match(<Unknown>:Unknown line)
	java.util.regex.Matcher.matches(<Unknown>:Unknown line)
	Annotate.annotate(Annotate.java:92)
	Recognizer.checkCandidates(Recognizer.java:192)
TRACE 100:
	DBaccess.getSentence(DBaccess.java:51)
	DBaccess.getSentence(DBaccess.java:39)
	Recognizer.main(Recognizer.java:282)
TRACE 146:
	java.net.PlainSocketImpl.available(<Unknown>:Unknown line)
	java.net.SocketInputStream.available(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.clearAllReceive(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.sqlQueryDirect(<Unknown>:Unknown line)
TRACE 130:
	java.util.AbstractList.<init>(<Unknown>:Unknown line)
	java.util.Vector.<init>(<Unknown>:Unknown line)
	java.util.Vector.<init>(<Unknown>:Unknown line)
	java.util.Vector.<init>(<Unknown>:Unknown line)
TRACE 94:
	java.util.Vector.elements(<Unknown>:Unknown line)
	Rules.candidates(Rules.java:133)
	TextProcessor.getCandidatesOfText(TextProcessor.java:115)
	Recognizer.main(Recognizer.java:273)
TRACE 98:
	java.io.BufferedWriter.write(<Unknown>:Unknown line)
	java.io.Writer.write(<Unknown>:Unknown line)
	java.io.BufferedWriter.newLine(<Unknown>:Unknown line)
	java.io.PrintStream.newLine(<Unknown>:Unknown line)
TRACE 121:
	java.util.Hashtable.size(<Unknown>:Unknown line)
	java.util.Hashtable.toString(<Unknown>:Unknown line)
	TextProcessor.getNEsOfText(TextProcessor.java:174)
	Recognizer.main(Recognizer.java:280)
TRACE 84:
	TextProcessor.getNEsOfText(TextProcessor.java:144)
	Recognizer.main(Recognizer.java:280)
TRACE 4:
	java.util.jar.JarFile.<clinit>(<Unknown>:Unknown line)
	sun.misc.URLClassPath$JarLoader.getJarFile(<Unknown>:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(<Unknown>:Unknown line)
	sun.misc.URLClassPath$3.run(<Unknown>:Unknown line)
TRACE 14:
	java.lang.String.<init>(<Unknown>:Unknown line)
	java.io.BufferedReader.readLine(<Unknown>:Unknown line)
	java.io.BufferedReader.readLine(<Unknown>:Unknown line)
	NameTable.loadFromFile(NameTable.java:67)
TRACE 12:
	MatcherNam.loadPatterns(MatcherNam.java:61)
	Recognizer.main(Recognizer.java:251)
TRACE 89:
	NameTable.insert(NameTable.java:109)
	TextProcessor.getCandidatesOfText(TextProcessor.java:117)
	Recognizer.main(Recognizer.java:273)
TRACE 45:
	java.io.FileOutputStream.writeBytes(<Unknown>:Native method)
	java.io.FileOutputStream.write(<Unknown>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown>:Unknown line)
	java.io.BufferedOutputStream.flush(<Unknown>:Unknown line)
TRACE 90:
	java.util.Hashtable$EmptyEnumerator.hasMoreElements(<Unknown>:Unknown line)
	NameTable.insert(NameTable.java:109)
	TextProcessor.getCandidatesOfText(TextProcessor.java:117)
	Recognizer.main(Recognizer.java:273)
TRACE 105:
	sun.nio.cs.SingleByteDecoder.decodeArrayLoop(<Unknown>:Unknown line)
	sun.nio.cs.SingleByteDecoder.decodeLoop(<Unknown>:Unknown line)
	java.nio.charset.CharsetDecoder.decode(<Unknown>:Unknown line)
	java.lang.StringCoding$CharsetSD.decode(<Unknown>:Unknown line)
TRACE 19:
	org.gjt.mm.mysql.MysqlIO.<init>(<Unknown>:Unknown line)
	org.gjt.mm.mysql.jdbc2.IO.<init>(<Unknown>:Unknown line)
	org.gjt.mm.mysql.jdbc2.Connection.createNewIO(<Unknown>:Unknown line)
	org.gjt.mm.mysql.Connection.connectionInit(<Unknown>:Unknown line)
TRACE 138:
	java.util.Hashtable.get(<Unknown>:Unknown line)
	MatcherNam.getClassificationsOf(MatcherNam.java:496)
	Recognizer.checkCandidates(Recognizer.java:193)
	Recognizer.main(Recognizer.java:276)
TRACE 99:
	java.util.Hashtable.toString(<Unknown>:Unknown line)
	TextProcessor.getNEsOfText(TextProcessor.java:174)
	Recognizer.main(Recognizer.java:280)
TRACE 68:
	java.net.SocketInputStream.read(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.readPacket(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.sendCommand(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.sqlQueryDirect(<Unknown>:Unknown line)
TRACE 15:
	Recognizer.main(Recognizer.java:254)
TRACE 128:
	TextProcessor.getNEsOfText(TextProcessor.java:174)
	Recognizer.main(Recognizer.java:280)
TRACE 132:
	java.util.regex.Pattern$Curly.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Matcher.match(<Unknown>:Unknown line)
	java.util.regex.Matcher.matches(<Unknown>:Unknown line)
TRACE 13:
	NameTable.loadFromFile(NameTable.java:68)
	Recognizer.init(Recognizer.java:138)
	Recognizer.main(Recognizer.java:252)
TRACE 154:
	java.lang.StringCoding.deref(<Unknown>:Unknown line)
	java.lang.StringCoding.encode(<Unknown>:Unknown line)
	java.lang.StringCoding.encode(<Unknown>:Unknown line)
	java.lang.String.getBytes(<Unknown>:Unknown line)
TRACE 37:
	java.util.regex.Pattern.matcher(<Unknown>:Unknown line)
	TextProcessor.getCandidatesOfText(TextProcessor.java:92)
	Recognizer.main(Recognizer.java:273)
TRACE 120:
	java.util.regex.Matcher.matches(<Unknown>:Unknown line)
	TextProcessor.getNEsOfText(TextProcessor.java:147)
	Recognizer.main(Recognizer.java:280)
TRACE 86:
	RulesNE.match(RulesNE.java:185)
	TextProcessor.getNEsOfText(TextProcessor.java:169)
	Recognizer.main(Recognizer.java:280)
TRACE 124:
	java.lang.StringBuffer.toString(<Unknown>:Unknown line)
	TextProcessor.tokenize(TextProcessor.java:38)
	TextProcessor.getCandidatesOfText(TextProcessor.java:79)
	Recognizer.main(Recognizer.java:273)
TRACE 36:
	java.util.regex.Pattern$Range.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
TRACE 85:
	java.util.Hashtable.get(<Unknown>:Unknown line)
	TextProcessor.getNEsOfText(TextProcessor.java:152)
	Recognizer.main(Recognizer.java:280)
TRACE 95:
	java.lang.StringBuffer.append(<Unknown>:Unknown line)
	java.lang.StringBuffer.<init>(<Unknown>:Unknown line)
	TextProcessor.tokenize(TextProcessor.java:38)
	TextProcessor.getNEsOfText(TextProcessor.java:134)
TRACE 123:
	java.util.regex.Pattern$Slice.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Curly.match0(<Unknown>:Unknown line)
	java.util.regex.Pattern$Curly.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
TRACE 40:
	java.util.regex.Matcher.<init>(<Unknown>:Unknown line)
	java.util.regex.Pattern.matcher(<Unknown>:Unknown line)
	TextProcessor.getNEsOfText(TextProcessor.java:147)
	Recognizer.main(Recognizer.java:280)
TRACE 41:
	Rules.candidates(Rules.java:135)
	TextProcessor.getCandidatesOfText(TextProcessor.java:115)
	Recognizer.main(Recognizer.java:273)
TRACE 25:
	org.gjt.mm.mysql.jdbc2.Connection.createStatement(<Unknown>:Unknown line)
	org.gjt.mm.mysql.jdbc2.Connection.createStatement(<Unknown>:Unknown line)
	org.gjt.mm.mysql.Connection.connectionInit(<Unknown>:Unknown line)
	org.gjt.mm.mysql.jdbc2.Connection.connectionInit(<Unknown>:Unknown line)
TRACE 18:
	org.gjt.mm.mysql.jdbc2.Connection.createNewIO(<Unknown>:Unknown line)
	org.gjt.mm.mysql.Connection.connectionInit(<Unknown>:Unknown line)
	org.gjt.mm.mysql.jdbc2.Connection.connectionInit(<Unknown>:Unknown line)
	org.gjt.mm.mysql.Driver.connect(<Unknown>:Unknown line)
TRACE 153:
	java.util.regex.Pattern$Curly.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$GroupHead.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Loop.matchInit(<Unknown>:Unknown line)
	java.util.regex.Pattern$Prolog.match(<Unknown>:Unknown line)
TRACE 167:
	java.lang.Character.digit(<Unknown>:Unknown line)
	java.lang.Integer.parseInt(<Unknown>:Unknown line)
	java.lang.Integer.<init>(<Unknown>:Unknown line)
	MatcherNam.getClassificationsOf(MatcherNam.java:496)
TRACE 26:
	org.gjt.mm.mysql.Statement.<init>(<Unknown>:Unknown line)
	org.gjt.mm.mysql.jdbc2.Statement.<init>(<Unknown>:Unknown line)
	org.gjt.mm.mysql.jdbc2.Connection.createStatement(<Unknown>:Unknown line)
	org.gjt.mm.mysql.jdbc2.Connection.createStatement(<Unknown>:Unknown line)
TRACE 171:
	java.util.Hashtable$Enumerator.hasMoreElements(<Unknown>:Unknown line)
	TextProcessor.getNEsOfText(TextProcessor.java:143)
	Recognizer.main(Recognizer.java:280)
TRACE 42:
	java.util.regex.Matcher.match(<Unknown>:Unknown line)
	java.util.regex.Matcher.matches(<Unknown>:Unknown line)
	TextProcessor.getCandidatesOfText(TextProcessor.java:92)
	Recognizer.main(Recognizer.java:273)
TRACE 31:
	java.lang.StringBuffer.<init>(<Unknown>:Unknown line)
	java.lang.StringBuffer.<init>(<Unknown>:Unknown line)
	Rules.loadPatterns(Rules.java:50)
	Recognizer.main(Recognizer.java:255)
TRACE 34:
	RulesNE.loadPatterns(RulesNE.java:51)
	Recognizer.main(Recognizer.java:258)
TRACE 151:
	java.lang.StringBuffer.toString(<Unknown>:Unknown line)
	Rules.output(Rules.java:110)
	Rules.candidates(Rules.java:146)
	TextProcessor.getCandidatesOfText(TextProcessor.java:115)
TRACE 35:
	java.lang.StringBuffer.expandCapacity(<Unknown>:Unknown line)
	java.lang.StringBuffer.append(<Unknown>:Unknown line)
	Pattern.toString(Pattern.java:35)
	RulesNE.loadPatterns(RulesNE.java:79)
TRACE 148:
	java.util.regex.Matcher.getTextLength(<Unknown>:Unknown line)
	java.util.regex.Matcher.matches(<Unknown>:Unknown line)
	TextProcessor.getCandidatesOfText(TextProcessor.java:92)
	Recognizer.main(Recognizer.java:273)
TRACE 9:
	Recognizer.<clinit>(Recognizer.java:68)
TRACE 71:
	MatcherNam.getClassificationsOf(MatcherNam.java:496)
	Recognizer.checkCandidates(Recognizer.java:193)
	Recognizer.main(Recognizer.java:276)
TRACE 88:
	java.lang.Integer.<init>(<Unknown>:Unknown line)
	RulesNE.match(RulesNE.java:191)
	TextProcessor.getNEsOfText(TextProcessor.java:169)
	Recognizer.main(Recognizer.java:280)
TRACE 115:
	java.util.Hashtable.<init>(<Unknown>:Unknown line)
	java.util.Hashtable.<init>(<Unknown>:Unknown line)
	NameTable.<init>(NameTable.java:29)
	Rules.candidates(Rules.java:129)
TRACE 109:
	java.lang.StringCoding$CharsetSD.decode(<Unknown>:Unknown line)
	java.lang.StringCoding.decode(<Unknown>:Unknown line)
	java.lang.StringCoding.decode(<Unknown>:Unknown line)
	java.lang.String.<init>(<Unknown>:Unknown line)
TRACE 91:
	java.lang.Character.digit(<Unknown>:Unknown line)
	java.lang.Integer.parseInt(<Unknown>:Unknown line)
	java.lang.Integer.<init>(<Unknown>:Unknown line)
	RulesNE.match(RulesNE.java:191)
TRACE 119:
	java.util.regex.Matcher.reset(<Unknown>:Unknown line)
	java.util.regex.Matcher.matches(<Unknown>:Unknown line)
	TextProcessor.getNEsOfText(TextProcessor.java:147)
	Recognizer.main(Recognizer.java:280)
TRACE 104:
	java.lang.StringBuffer.toString(<Unknown>:Unknown line)
	Annotate.tokenize(Annotate.java:36)
	Recognizer.checkCandidates(Recognizer.java:191)
	Recognizer.main(Recognizer.java:276)
TRACE 54:
	java.net.SocketOutputStream.socketWrite0(<Unknown>:Native method)
	java.net.SocketOutputStream.socketWrite(<Unknown>:Unknown line)
	java.net.SocketOutputStream.write(<Unknown>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown>:Unknown line)
TRACE 103:
	java.lang.StringBuffer.<init>(<Unknown>:Unknown line)
	java.lang.StringBuffer.<init>(<Unknown>:Unknown line)
	Annotate.tokenize(Annotate.java:52)
	Recognizer.checkCandidates(Recognizer.java:191)
TRACE 72:
	java.util.regex.Matcher.<init>(<Unknown>:Unknown line)
	java.util.regex.Pattern.matcher(<Unknown>:Unknown line)
	Annotate.annotate(Annotate.java:92)
	Recognizer.checkCandidates(Recognizer.java:192)
TRACE 152:
	sun.nio.cs.StreamEncoder.write(<Unknown>:Unknown line)
	java.io.OutputStreamWriter.write(<Unknown>:Unknown line)
	Rules.output(Rules.java:118)
	Rules.candidates(Rules.java:146)
TRACE 122:
	java.net.PlainSocketImpl.socketAvailable(<Unknown>:Native method)
	java.net.PlainSocketImpl.available(<Unknown>:Unknown line)
	java.net.SocketInputStream.available(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.clearAllReceive(<Unknown>:Unknown line)
TRACE 143:
	MatcherNam.getClassificationsOf(MatcherNam.java:494)
	Recognizer.checkCandidates(Recognizer.java:193)
	Recognizer.main(Recognizer.java:276)
TRACE 49:
	java.util.regex.Pattern$Curly.match0(<Unknown>:Unknown line)
	java.util.regex.Pattern$Curly.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Matcher.match(<Unknown>:Unknown line)
TRACE 87:
	java.util.regex.Pattern$BitClass.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
TRACE 61:
	java.lang.String.substring(<Unknown>:Unknown line)
	java.util.StringTokenizer.nextToken(<Unknown>:Unknown line)
	TextProcessor.tokenize(TextProcessor.java:62)
	TextProcessor.getNEsOfText(TextProcessor.java:134)
TRACE 48:
	java.lang.Character.digit(<Unknown>:Unknown line)
	java.lang.Integer.parseInt(<Unknown>:Unknown line)
	java.lang.Integer.<init>(<Unknown>:Unknown line)
	Rules.candidates(Rules.java:135)
TRACE 20:
	java.net.InetAddress.init(<Unknown>:Native method)
	java.net.InetAddress.<clinit>(<Unknown>:Unknown line)
	java.net.InetSocketAddress.<init>(<Unknown>:Unknown line)
	java.net.Socket.<init>(<Unknown>:Unknown line)
TRACE 77:
	java.util.Vector.elements(<Unknown>:Unknown line)
	RulesNE.match(RulesNE.java:189)
	TextProcessor.getNEsOfText(TextProcessor.java:169)
	Recognizer.main(Recognizer.java:280)
TRACE 66:
	java.util.Hashtable.<init>(<Unknown>:Unknown line)
	java.util.Hashtable.<init>(<Unknown>:Unknown line)
	NameTable.<init>(NameTable.java:29)
	RulesNE.match(RulesNE.java:185)
TRACE 62:
	java.util.regex.Pattern$BitClass.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Matcher.match(<Unknown>:Unknown line)
	java.util.regex.Matcher.matches(<Unknown>:Unknown line)
TRACE 160:
	java.io.PrintStream.write(<Unknown>:Unknown line)
	java.io.PrintStream.print(<Unknown>:Unknown line)
	Rules.output(Rules.java:114)
	Rules.candidates(Rules.java:146)
TRACE 23:
	java.net.SocketInputStream.socketRead0(<Unknown>:Native method)
	java.net.SocketInputStream.read(<Unknown>:Unknown line)
	java.net.SocketInputStream.read(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.readPacket(<Unknown>:Unknown line)
TRACE 142:
	Annotate.annotate(Annotate.java:114)
	Recognizer.checkCandidates(Recognizer.java:192)
	Recognizer.main(Recognizer.java:276)
TRACE 11:
	Recognizer.<clinit>(Recognizer.java:151)
TRACE 118:
	TextProcessor.getNEsOfText(TextProcessor.java:147)
	Recognizer.main(Recognizer.java:280)
TRACE 110:
	java.util.regex.Matcher.reset(<Unknown>:Unknown line)
	java.util.regex.Matcher.matches(<Unknown>:Unknown line)
	Annotate.annotate(Annotate.java:92)
	Recognizer.checkCandidates(Recognizer.java:192)
TRACE 168:
	TextProcessor.getCandidatesOfText(TextProcessor.java:108)
	Recognizer.main(Recognizer.java:273)
TRACE 32:
	java.lang.String.substring(<Unknown>:Unknown line)
	java.util.StringTokenizer.nextToken(<Unknown>:Unknown line)
	RulesNE.loadPatterns(RulesNE.java:67)
	Recognizer.main(Recognizer.java:258)
TRACE 164:
	java.lang.StringBuffer.expandCapacity(<Unknown>:Unknown line)
	java.lang.StringBuffer.append(<Unknown>:Unknown line)
	Pattern.toString(Pattern.java:37)
	Rules.output(Rules.java:112)
TRACE 69:
	java.lang.StringBuffer.<init>(<Unknown>:Unknown line)
	java.lang.StringBuffer.<init>(<Unknown>:Unknown line)
	Annotate.tokenize(Annotate.java:36)
	Recognizer.checkCandidates(Recognizer.java:191)
TRACE 59:
	java.lang.StringBuffer.toString(<Unknown>:Unknown line)
	TextProcessor.tokenize(TextProcessor.java:38)
	TextProcessor.getNEsOfText(TextProcessor.java:134)
	Recognizer.main(Recognizer.java:280)
TRACE 7:
	Recognizer.<clinit>(Recognizer.java:66)
TRACE 129:
	Rules.candidates(Rules.java:133)
	TextProcessor.getCandidatesOfText(TextProcessor.java:115)
	Recognizer.main(Recognizer.java:273)
TRACE 8:
	Recognizer.<clinit>(Recognizer.java:67)
TRACE 147:
	java.lang.String.substring(<Unknown>:Unknown line)
	java.util.StringTokenizer.nextToken(<Unknown>:Unknown line)
	TextProcessor.tokenize(TextProcessor.java:62)
	TextProcessor.getCandidatesOfText(TextProcessor.java:79)
TRACE 39:
	java.util.regex.Matcher.<init>(<Unknown>:Unknown line)
	java.util.regex.Pattern.matcher(<Unknown>:Unknown line)
	TextProcessor.getCandidatesOfText(TextProcessor.java:92)
	Recognizer.main(Recognizer.java:273)
TRACE 107:
	java.net.SocketInputStream.read(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.reuseAndReadPacket(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.nextRow(<Unknown>:Unknown line)
	org.gjt.mm.mysql.MysqlIO.getResultSet(<Unknown>:Unknown line)
TRACE 165:
	java.io.File.<init>(<Unknown>:Unknown line)
	java.io.FileOutputStream.<init>(<Unknown>:Unknown line)
	java.io.FileWriter.<init>(<Unknown>:Unknown line)
	Rules.output(Rules.java:103)
TRACE 139:
	java.io.FileOutputStream.writeBytes(<Unknown>:Native method)
	java.io.FileOutputStream.write(<Unknown>:Unknown line)
	sun.nio.cs.StreamEncoder$CharsetSE.writeBytes(<Unknown>:Unknown line)
	sun.nio.cs.StreamEncoder$CharsetSE.implClose(<Unknown>:Unknown line)
TRACE 137:
	java.util.regex.Matcher.matches(<Unknown>:Unknown line)
	Annotate.annotate(Annotate.java:92)
	Recognizer.checkCandidates(Recognizer.java:192)
	Recognizer.main(Recognizer.java:276)
TRACE 169:
	org.gjt.mm.mysql.jdbc2.Connection.createStatement(<Unknown>:Unknown line)
	DBaccess.getNof(DBaccess.java:84)
	DBaccess.getNof(DBaccess.java:72)
	Recognizer.checkCandidates(Recognizer.java:190)
TRACE 150:
	java.lang.StringBuffer.toString(<Unknown>:Unknown line)
	java.util.Hashtable.toString(<Unknown>:Unknown line)
	TextProcessor.getCandidatesOfText(TextProcessor.java:120)
	Recognizer.main(Recognizer.java:273)
TRACE 159:
	TextProcessor.getNEsOfText(TextProcessor.java:171)
	Recognizer.main(Recognizer.java:280)
TRACE 93:
	java.io.FileOutputStream.write(<Unknown>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown>:Unknown line)
	java.io.BufferedOutputStream.flush(<Unknown>:Unknown line)
	java.io.PrintStream.write(<Unknown>:Unknown line)
TRACE 108:
	Annotate.tokenize(Annotate.java:36)
	Recognizer.checkCandidates(Recognizer.java:191)
	Recognizer.main(Recognizer.java:276)
TRACE 64:
	java.util.Hashtable.get(<Unknown>:Unknown line)
	RulesNE.match(RulesNE.java:191)
	TextProcessor.getNEsOfText(TextProcessor.java:169)
	Recognizer.main(Recognizer.java:280)
TRACE 97:
	java.io.BufferedWriter.write(<Unknown>:Unknown line)
	java.io.Writer.write(<Unknown>:Unknown line)
	java.io.PrintStream.write(<Unknown>:Unknown line)
	java.io.PrintStream.print(<Unknown>:Unknown line)
TRACE 102:
	java.lang.StringBuffer.<init>(<Unknown>:Unknown line)
	java.lang.StringBuffer.<init>(<Unknown>:Unknown line)
	Annotate.tokenize(Annotate.java:43)
	Recognizer.checkCandidates(Recognizer.java:191)
TRACE 73:
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Matcher.match(<Unknown>:Unknown line)
	java.util.regex.Matcher.matches(<Unknown>:Unknown line)
	Annotate.annotate(Annotate.java:92)
TRACE 46:
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
TRACE 17:
	java.lang.Class.forName0(<Unknown>:Native method)
	java.lang.Class.forName(<Unknown>:Unknown line)
	org.gjt.mm.mysql.Driver.connect(<Unknown>:Unknown line)
	java.sql.DriverManager.getConnection(<Unknown>:Unknown line)
TRACE 145:
	java.lang.Integer.parseInt(<Unknown>:Unknown line)
	java.lang.Integer.<init>(<Unknown>:Unknown line)
	RulesNE.match(RulesNE.java:191)
	TextProcessor.getNEsOfText(TextProcessor.java:169)
TRACE 16:
	java.lang.Class.forName0(<Unknown>:Native method)
	java.lang.Class.forName(<Unknown>:Unknown line)
	DBaccess.<init>(DBaccess.java:18)
	DBaccess.<init>(DBaccess.java:33)
TRACE 24:
	org.gjt.mm.mysql.MysqlIO.init(<Unknown>:Unknown line)
	org.gjt.mm.mysql.Connection.connectionInit(<Unknown>:Unknown line)
	org.gjt.mm.mysql.jdbc2.Connection.connectionInit(<Unknown>:Unknown line)
	org.gjt.mm.mysql.Driver.connect(<Unknown>:Unknown line)
TRACE 113:
	java.util.Hashtable$Enumerator.hasMoreElements(<Unknown>:Unknown line)
	Annotate.annotate(Annotate.java:88)
	Recognizer.checkCandidates(Recognizer.java:192)
	Recognizer.main(Recognizer.java:276)
TRACE 22:
	java.net.PlainSocketImpl.socketCreate(<Unknown>:Native method)
	java.net.PlainSocketImpl.create(<Unknown>:Unknown line)
	java.net.Socket.createImpl(<Unknown>:Unknown line)
	java.net.Socket.<init>(<Unknown>:Unknown line)
TRACE 6:
	Recognizer.<clinit>(Recognizer.java:55)
TRACE 133:
	TextProcessor.getNEsOfText(TextProcessor.java:152)
	Recognizer.main(Recognizer.java:280)
TRACE 111:
	sun.nio.cs.StreamEncoder$CharsetSE.implWrite(<Unknown>:Unknown line)
	sun.nio.cs.StreamEncoder.write(<Unknown>:Unknown line)
	java.io.OutputStreamWriter.write(<Unknown>:Unknown line)
	java.io.BufferedWriter.flushBuffer(<Unknown>:Unknown line)
TRACE 44:
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Pattern$Add.match(<Unknown>:Unknown line)
	java.util.regex.Matcher.match(<Unknown>:Unknown line)
	java.util.regex.Matcher.matches(<Unknown>:Unknown line)
TRACE 33:
	RulesNE.loadPatterns(RulesNE.java:68)
	Recognizer.main(Recognizer.java:258)
TRACE 125:
	java.nio.CharBuffer.wrap(<Unknown>:Unknown line)
	sun.nio.cs.StreamEncoder$CharsetSE.implWrite(<Unknown>:Unknown line)
	sun.nio.cs.StreamEncoder.write(<Unknown>:Unknown line)
	java.io.OutputStreamWriter.write(<Unknown>:Unknown line)
CPU SAMPLES BEGIN (total = 15035) Fri Apr 15 09:26:33 2005
rank   self  accum   count trace method
   1 92.77% 92.77%   13948    23 java.net.SocketInputStream.socketRead0
   2  1.22% 93.99%     184    69 java.lang.StringBuffer.<init>
   3  0.72% 94.72%     109    40 java.util.regex.Matcher.<init>
   4  0.61% 95.33%      92    43 java.util.regex.Pattern.matcher
   5  0.60% 95.93%      90    39 java.util.regex.Matcher.<init>
   6  0.58% 96.51%      87    37 java.util.regex.Pattern.matcher
   7  0.27% 96.78%      41    70 java.util.regex.Pattern.matcher
   8  0.25% 97.03%      38    45 java.io.FileOutputStream.writeBytes
   9  0.23% 97.26%      34    46 java.util.regex.Pattern$Add.match
  10  0.21% 97.47%      31    72 java.util.regex.Matcher.<init>
  11  0.20% 97.67%      30    41 Rules.candidates
  12  0.18% 97.85%      27    53 RulesNE.match
  13  0.15% 97.99%      22    54 java.net.SocketOutputStream.socketWrite0
  14  0.11% 98.10%      16   104 java.lang.StringBuffer.toString
  15  0.09% 98.19%      14    36 java.util.regex.Pattern$Range.match
  16  0.09% 98.28%      14    71 MatcherNam.getClassificationsOf
  17  0.07% 98.36%      11    59 java.lang.StringBuffer.toString
  18  0.06% 98.42%       9    49 java.util.regex.Pattern$Curly.match0
  19  0.05% 98.47%       8   103 java.lang.StringBuffer.<init>
  20  0.05% 98.52%       8    87 java.util.regex.Pattern$BitClass.match
  21  0.05% 98.57%       7   108 Annotate.tokenize
  22  0.04% 98.61%       6    91 java.lang.Character.digit
  23  0.04% 98.65%       6   119 java.util.regex.Matcher.reset
  24  0.03% 98.68%       5    76 java.util.regex.Matcher.reset
  25  0.03% 98.72%       5    47 java.util.regex.Pattern$Add.match
  26  0.03% 98.74%       4    78 TextProcessor.getNEsOfText
  27  0.03% 98.77%       4    63 TextProcessor.tokenize
  28  0.03% 98.80%       4   120 java.util.regex.Matcher.matches
  29  0.03% 98.82%       4   139 java.io.FileOutputStream.writeBytes
  30  0.03% 98.85%       4    64 java.util.Hashtable.get
  31  0.02% 98.87%       3    82 java.util.regex.Matcher.reset
  32  0.02% 98.89%       3    58 java.util.regex.Pattern$Add.match
  33  0.02% 98.91%       3    55 java.lang.StringBuffer.<init>
  34  0.02% 98.93%       3    74 TextProcessor.getCandidatesOfText
  35  0.02% 98.95%       3    50 RulesNE.match
  36  0.02% 98.97%       3    83 java.util.regex.Pattern$Add.match
  37  0.02% 98.99%       3   106 java.lang.StringBuffer.expandCapacity
  38  0.02% 99.01%       3    67 java.nio.CharBuffer.wrap
  39  0.02% 99.03%       3    84 TextProcessor.getNEsOfText
  40  0.02% 99.05%       3    99 java.util.Hashtable.toString
  41  0.02% 99.07%       3    68 java.net.SocketInputStream.read
  42  0.02% 99.09%       3    42 java.util.regex.Matcher.match
  43  0.02% 99.11%       3    48 java.lang.Character.digit
  44  0.02% 99.13%       3    77 java.util.Vector.elements
  45  0.02% 99.15%       3    93 java.io.FileOutputStream.write
  46  0.02% 99.17%       3    44 java.util.regex.Pattern$Add.match
  47  0.01% 99.18%       2   144 java.util.Hashtable.getEnumeration
  48  0.01% 99.20%       2    60 java.util.regex.Pattern$Add.match
  49  0.01% 99.21%       2    30 java.lang.StringBuffer.toString
  50  0.01% 99.22%       2    52 java.util.regex.Matcher.match
  51  0.01% 99.24%       2    51 java.io.BufferedOutputStream.flush
  52  0.01% 99.25%       2    79 sun.nio.cs.StreamEncoder$CharsetSE.writeBytes
  53  0.01% 99.26%       2    75 java.util.regex.Pattern$Add.match
  54  0.01% 99.28%       2   162 java.util.regex.Matcher.match
  55  0.01% 99.29%       2    14 java.lang.String.<init>
  56  0.01% 99.30%       2   138 java.util.Hashtable.get
  57  0.01% 99.31%       2   124 java.lang.StringBuffer.toString
  58  0.01% 99.33%       2    26 org.gjt.mm.mysql.Statement.<init>
  59  0.01% 99.34%       2    31 java.lang.StringBuffer.<init>
  60  0.01% 99.35%       2   115 java.util.Hashtable.<init>
  61  0.01% 99.37%       2   152 sun.nio.cs.StreamEncoder.write
  62  0.01% 99.38%       2    66 java.util.Hashtable.<init>
  63  0.01% 99.39%       2   107 java.net.SocketInputStream.read
  64  0.01% 99.41%       2   137 java.util.regex.Matcher.matches
  65  0.01% 99.42%       2   102 java.lang.StringBuffer.<init>
  66  0.01% 99.43%       2   133 TextProcessor.getNEsOfText
CPU SAMPLES END
